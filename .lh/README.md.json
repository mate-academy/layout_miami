{
    "sourceFile": "README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1717685926528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717753152585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +0,0 @@\n-# Miami landing page\n-\n-In this task, you will learn how to implement a landing page. To do that:\n-\n-- choose a landing page design from the list below;\n-  - [BOSE landing](https://www.figma.com/file/DtkQmQ797hk0nI4KfMi2Uq/BOSE-New-Version?type=design&node-id=6703-88&t=L7eKz5YKLN0m5WxR-0)\n-  - [MET landing](https://www.figma.com/file/lSR1m42L9YwzQwzzxKwHpw/THE-MET)\n-  - [MYBIKE landing](https://www.figma.com/file/NZQAIydtHo5QkINyGLHNcq/BIKE-New-Version?node-id=0%3A1)\n-  - [B&O](https://www.figma.com/file/DtkQmQ797hk0nI4KfMi2Uq/BOSE-New-Version?type=design&node-id=6817-212&t=ZTV6Gl8NzaWkJ4FK-0)\n-  - [Nothing](https://www.figma.com/file/DtkQmQ797hk0nI4KfMi2Uq/BOSE-New-Version?type=design&node-id=6802-139&t=L7eKz5YKLN0m5WxR-0)\n-- watch the lesson videos and implement your page blocks similarly to the videos;\n-- **DON'T** try to do it `Pixel Perfect` - implement it the most `simple` way so it looks similar;\n-- when you finish the first block of your page deploy it and create a Pull Request with a [DEMO LINK](https://Kacper.github.io/layout_miami/)\n-- after each next block do the same (add, commit and push the changes, and deploy the updated demo;\n-- check yourself using the [CHECKLIST](https://github.com/mate-academy/layout_miami/blob/master/checklist.md) when finished;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1718100828256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,26 @@\n+Layout Miami is a web project aimed at providing a visually appealing and user-friendly layout inspired by the lively atmosphere of Miami. The project combines contemporary design principles with effective web development practices to create an engaging user experience.\n \n+Technologies Used\n+This project is developed using the following technologies:\n+\n+HTML: Provides the structure and content of the web pages.\n+CSS: Styles the layout, ensuring a visually appealing and responsive design.\n+JavaScript: Adds interactivity and dynamic elements to enhance the user experience.\n+Code Overview\n+The codebase of Layout Miami is organized to ensure clarity and maintainability. Below is a high-level overview of the key components:\n+\n+HTML Files:\n+\n+Define the structure of the web pages, including headers, footers, sections, and content elements.\n+Use semantic tags to improve accessibility and SEO.\n+\n+CSS Files:\n+\n+Contain styles for layout, typography, colors, and animations.\n+Ensure responsive design, adapting the layout to various screen sizes and devices.\n+Utilize Flexbox and Grid for modern layout techniques.\n+JavaScript Files:\n+\n+Handle interactivity and dynamic content.\n+Implement features such as navigation menus, sliders, and form validations.\n+Enhance user engagement with smooth transitions and animations.\n"
                },
                {
                    "date": 1718100837980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n \n HTML: Provides the structure and content of the web pages.\n CSS: Styles the layout, ensuring a visually appealing and responsive design.\n JavaScript: Adds interactivity and dynamic elements to enhance the user experience.\n+\n Code Overview\n The codebase of Layout Miami is organized to ensure clarity and maintainability. Below is a high-level overview of the key components:\n \n HTML Files:\n@@ -18,8 +19,9 @@\n \n Contain styles for layout, typography, colors, and animations.\n Ensure responsive design, adapting the layout to various screen sizes and devices.\n Utilize Flexbox and Grid for modern layout techniques.\n+\n JavaScript Files:\n \n Handle interactivity and dynamic content.\n Implement features such as navigation menus, sliders, and form validations.\n"
                }
            ],
            "date": 1717685926528,
            "name": "Commit-0",
            "content": "# Miami landing page\n\nIn this task, you will learn how to implement a landing page. To do that:\n\n- choose a landing page design from the list below;\n  - [BOSE landing](https://www.figma.com/file/DtkQmQ797hk0nI4KfMi2Uq/BOSE-New-Version?type=design&node-id=6703-88&t=L7eKz5YKLN0m5WxR-0)\n  - [MET landing](https://www.figma.com/file/lSR1m42L9YwzQwzzxKwHpw/THE-MET)\n  - [MYBIKE landing](https://www.figma.com/file/NZQAIydtHo5QkINyGLHNcq/BIKE-New-Version?node-id=0%3A1)\n  - [B&O](https://www.figma.com/file/DtkQmQ797hk0nI4KfMi2Uq/BOSE-New-Version?type=design&node-id=6817-212&t=ZTV6Gl8NzaWkJ4FK-0)\n  - [Nothing](https://www.figma.com/file/DtkQmQ797hk0nI4KfMi2Uq/BOSE-New-Version?type=design&node-id=6802-139&t=L7eKz5YKLN0m5WxR-0)\n- watch the lesson videos and implement your page blocks similarly to the videos;\n- **DON'T** try to do it `Pixel Perfect` - implement it the most `simple` way so it looks similar;\n- when you finish the first block of your page deploy it and create a Pull Request with a [DEMO LINK](https://Kacper.github.io/layout_miami/)\n- after each next block do the same (add, commit and push the changes, and deploy the updated demo;\n- check yourself using the [CHECKLIST](https://github.com/mate-academy/layout_miami/blob/master/checklist.md) when finished;\n"
        }
    ]
}